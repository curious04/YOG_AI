import { ReactNode } from 'react';
export interface Item {
    readonly id: string;
}
export interface Message extends Item {
    readonly elementIds?: Array<string>;
    readonly children: ReactNode;
    readonly delay?: number;
}
export interface OnboardContext {
    activeMessage: Message | null;
    onElementRender: (elementId: string) => void;
    onElementUnrender: (elementId: string) => void;
    ackMessage: (id: string) => void;
    HighlightComponent: any;
}
export declare type ShowCallback = ({ messageId, children, onAck }: {
    messageId: string;
    children: ReactNode;
    onAck: () => void;
}) => void;
export declare type AckCallback = ({ messageId }: {
    messageId: string;
}) => void;
export interface OnboardElementProps extends Item {
    ackOnClick?: boolean;
    ackOnMouseOver?: number;
}
